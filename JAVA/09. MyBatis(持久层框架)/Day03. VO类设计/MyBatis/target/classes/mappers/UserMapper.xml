<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"      
	"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<!-- namespace：当前XML文件用于配置哪个接口中抽象方法对应的SQL语句 -->
<mapper namespace="cn.tedu.mybatis.UserMapper">

	<!-- resultMap节点：指导MyBatis如何封装查询结果 -->
	<!-- id：自定义名称 -->
	<!-- column：查询结果中的列名 -->
	<!-- property：type对应的类中的属性名 -->
	<resultMap id="UserEntityMap"
		 type="cn.tedu.mybatis.User">
		<result column="id" property="id" />
		<result column="username" property="username" />
		<result column="password" property="password" />
		<result column="age" property="age" />
		<result column="phone" property="phone" />
		<result column="email" property="email" />
		<result column="is_delete" property="isDelete" />
	</resultMap>

	<!-- 使用insert节点配置插入数据的SQL语句 -->
	<!-- id：抽象方法的方法名 -->
	<!-- 在#{}中间的是方法的参数User类中的属性名称 -->
	<insert id="insert"
		parameterType="cn.tedu.mybatis.User"
		useGeneratedKeys="true"
		keyProperty="id">
		INSERT INTO t_user (
			username, password,
			age, phone,
			email
		) VALUES (
			#{username}, #{password},
			#{age}, #{phone},
			#{email}
		)
	</insert>
	
	<delete id="deleteById">
		DELETE FROM t_user WHERE id=#{id}
	</delete>
	
	<delete id="deleteByIds">
		DELETE FROM 
			t_user 
		WHERE 
			id
		IN
			<foreach collection="ids"
				item="id" separator=","
				open="(" close=")">
				#{id}
			</foreach>
	</delete>
	
	<update id="updatePassword">
		UPDATE t_user SET password=#{newPassword}
	</update>
	
	<update id="updatePasswordById">
		UPDATE t_user SET password=#{password} where id=#{id}
	</update>
	
	<select id="findById"
		resultType="cn.tedu.mybatis.User">
		SELECT * FROM t_user WHERE id=#{id}
	</select>
	
	<select id="findUserVOById"
		resultType="cn.tedu.mybatis.UserVO">
		SELECT 
			t_user.id, username,
			phone, email,
			password, age,
			is_delete AS isDelete,
			department_id AS departmentId,
			name AS departmentName
		FROM 
			t_user 
		LEFT JOIN
			t_department 
		ON 
			department_id=t_department.id
		WHERE
			t_user.id=#{id}
	</select>
	
	<select id="findByUsernameAndPassword"
		resultType="cn.tedu.mybatis.User">
		SELECT 
			* 
		FROM 
			t_user 
		WHERE 
			username=#{username} 
		AND 
			password=#{password}
	</select>
	
	<select id="count"
		resultType="java.lang.Integer">
		SELECT COUNT(*) FROM t_user
	</select>
	
	<select id="findAll"
		resultMap="UserEntityMap">
		SELECT 
			*
		FROM 
			t_user 
		ORDER BY 
			id ASC
	</select>
	
	<select id="find" 
		resultType="cn.tedu.mybatis.User">
		SELECT
			*
		FROM
			t_user
		<if test="where != null">
		WHERE
			${where}
		</if>
		<if test="orderBy != null">
		ORDER BY
			${orderBy}
		</if>
		<if test="offset != null">
		LIMIT
			#{offset}, #{count}
		</if>
	</select>
	
</mapper>






