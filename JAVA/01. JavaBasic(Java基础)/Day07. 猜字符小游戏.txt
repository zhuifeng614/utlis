回顾:
1.数组:
  7)数组的复制:
    7.1)System.arraycopy(a,1,a1,0,4);
    7.2)int[] a1 = Arrays.copyOf(a,6);
        a = Arrays.copyOf(a,a.length+1);
  8)数组的排序:
    8.1)Arrays.sort(arr);
2.方法:
    封装特定的业务逻辑功能，尽可能独立，只干一件事
    可以被反复调用多次，减少重复，有利于维护，有利于团队协作
3.方法的定义:
    修饰词 返回值类型 方法名(参数列表){
      方法体
    }
4.方法的调用:
  1)无返回值: 方法名(有参传参);
  2)有返回值: 数据类型 变量 = 方法名(有参传参);
              方法名(有参传参);---------不建议
5.return:
  1)return;    //1.1)结束方法
  2)return 值; //2.1)结束方法 2.2)返回结果给调用方





猜字符小游戏的目标:
1.练习了语法知识
2.掌握开发一个程序的步骤



猜字符小游戏:
1.设计数据结构:变量
  1)char[] chs;   //随机字符数组
  2)char[] input; //用户输入的字符数组
  3)int[] result; //对比的结果
  4)int score;    //得分
2.设计程序结构:方法
  1)主方法:
    public static void main(String[] args){
      //...
    }
  2)生成随机字符数组chs:
    public static char[] generate(){
      char[] chs = new char[5];
      //...
      return chs;
    }
  3)对比:随机字符数组chs与用户输入的字符数组input
    public static int[] check(char[] chs,char[] input){
      int[] result = new int[2];
      //...
      return result;
    }
3.设计算法:方法体
      String str = "ABCDE";
  1)将字符串转换为字符数组:
      char[] input = str.toCharArray();
  2)将字符串转换为大写字母:
      str = str.toUpperCase();
    将字符串转换为小写字母
      str = str.toLowerCase();
  3)判断字符串内容是否相等:
      if(str.equals("EXIT")){
      }


















基本数据类型判断相等--------------用==
String判断内容相等----------------用equals()












1)手里藏个数chs
2)猜吧!接收用户输入的数input
3)对比:chs与input，获取对比结果:
  3.1)错了，输出字符对个数以及位置对个数，重复第2步
  3.2)对了，算分并输出


while(true){ //自造死循环
  //必须出现break
  //...
  //...
  //...
  //...
}


exit时退出






B:位置对个数为5



C:字符对个数为5，并且，位置对个数为5
















int a = scan.nextInt();
double b = scan.nextDouble();




String s = scan.nextLine(); "ABC"
char[] input = s.toCharArray();

input[0]='A'
input[1]='B'
input[2]='C'












public static char[] generate(){
  char[] chs = new char[5];
  
  char[] letters = {'A','B','C','D',...,'X','Y','Z'};
  boolean[] flags = new boolean[letters.length]; //标记数组
  for(int i=0;i<chs.length;i++){
    do{
      int index = (int)(Math.random()*26); //随机抓小鸡
    }while(flags[index]==true); //打过疫苗了
    chs[i] = letters[index]; //打疫苗
    flags[index] = true; //打标记
  }
  
  i=0 index=0  chs[0]='A'
  i=1 index=25 chs[1]='Z'
  i=2 index=1  chs[2]='B'
  ...

  return chs;
}


Math.random()-----------0.0到0.99999999999...
























数据抽取算法:从一组数据中随机抽取部分数据















位置对是在字符对的基础之上的


public static int[] check(char[] chs,char[] input){
  int[] result = new int[2]; //0,0--假设result[1]为字符对，result[0]为位置对
  
  for(int i=0;i<chs.length;i++){
    for(int j=0;j<input.length;j++){
      if(chs[i]==input[j]){ //字符对
        result[1]++; //字符对个数增1
	if(i==j){ //位置对
	  result[0]++; //位置对个数增1
	}
	break; //剩余input元素不再参与比较了
      }
    }
  }


  i=0
    j=0 chs0-input0
    j=1 chs0-input1
    j=2 chs0-input2
    j=3 chs0-input3
    j=4 chs0-input4
  i=1
    j=0 chs1-input0
    j=1 chs1-input1
    j=2 chs1-input2
    j=3 chs1-input3
    j=4 chs1-input4

  return result;
}




















char c1,c2,c3,c4,c5;
char[] chs;

多个数据的类型相同，并且逻辑相关--------------数组











变量、数据类型、运算符、
分支结构、循环结构、
数组、方法











小代码---------------练习语法
经典案例-------------有点小业务
阶段项目-------------逻辑稍微复杂一些












